function t(){return t=Object.assign?Object.assign.bind():function(t){for(var i=1;i<arguments.length;i++){var e=arguments[i];for(var n in e)({}).hasOwnProperty.call(e,n)&&(t[n]=e[n])}return t},t.apply(null,arguments)}const i={columns:12,gutterWidth:"16px",marginWidth:"16px",color:"red",opacity:.1,key:"g"};class e{constructor(t={}){this.sharedConfig=void 0,this.breakpoints=void 0,this.currentBreakpointConfig=void 0,this.previousBreakpointConfig=null,this.gridContainer=void 0,this.isActive=!1,this.ctrlDown=!1;const e=this.mergeConfig(t,i);this.sharedConfig=e,this.breakpoints=e.breakpoints||{},this.currentBreakpointConfig=this.getBreakpointConfig(),this.previousBreakpointConfig=this.currentBreakpointConfig,this.gridContainer=document.createElement("div"),document.body.append(this.gridContainer),this.initialize()}mergeConfig(i,e){const n=t({},e.breakpoints,i.breakpoints);if(i.breakpoints)for(const e in i.breakpoints)n[e]=t({},n[e],i.breakpoints[e]);delete i.breakpoints;const r=t({},e,i);return t({},r,{breakpoints:n})}initialize(){this.setGridEvents()}getBreakpointConfig(){const i=window.innerWidth;let e=this.sharedConfig;for(const[n,r]of Object.entries(this.breakpoints))i>=parseInt(n)&&(e=t({},this.sharedConfig,r));return e}extractCSSVariable(t){const i=t.match(/var\((--[\w-]+)\)/);return i?i[1]:null}setGridHelperStyles(){const t=this.gridContainer.style;t.zIndex="10000",t.position="fixed",t.top="0",t.left="0",t.display="flex",t.width="100%",t.height="100%",t.columnGap=`${this.currentBreakpointConfig.gutterWidth}`,t.paddingLeft=`${this.currentBreakpointConfig.marginWidth}`,t.paddingRight=`${this.currentBreakpointConfig.marginWidth}`,t.pointerEvents="none",t.visibility=this.isActive?"visible":"hidden"}setGridHelperColumns(){this.gridContainer.innerHTML="";let t=0,i=this.currentBreakpointConfig.columns;if("string"==typeof i){const e=this.extractCSSVariable(i);if(e){const i=getComputedStyle(document.documentElement).getPropertyValue(e);t=parseInt(i),isNaN(t)&&(t=12)}}else"number"==typeof i&&(t=i);for(let i=0;i<t;i++){const t=document.createElement("div");t.style.flex="1 1 0",t.style.backgroundColor=this.currentBreakpointConfig.color,t.style.opacity=`${this.currentBreakpointConfig.opacity}`,this.gridContainer.appendChild(t)}}setGridEvents(){window.addEventListener("resize",()=>{this.currentBreakpointConfig=this.getBreakpointConfig(),this.setGridHelperStyles(),this.setGridHelperColumns()}),document.addEventListener("keydown",t=>this.handleKeyDown(t)),document.addEventListener("keyup",t=>this.handleKeyUp(t))}handleKeyDown(t){"Control"===t.key?this.ctrlDown=!0:this.ctrlDown&&t.key===this.sharedConfig.key&&(this.currentBreakpointConfig=this.getBreakpointConfig(),this.setGridHelperStyles(),this.setGridHelperColumns(),this.toggleGridVisibility())}handleKeyUp(t){"Control"===t.key&&(this.ctrlDown=!1)}toggleGridVisibility(){this.gridContainer.style.visibility=this.isActive?"hidden":"visible",this.isActive=!this.isActive}}export{e as default};
//# sourceMappingURL=grid-helper.modern.mjs.map
