{"version":3,"file":"grid-helper.modern.mjs","sources":["../index.ts"],"sourcesContent":["import { GridHelperBreakpointConfig, GridHelperConfig, SharedGridConfig } from './types';\n\n// Default configuration\nconst defaultConfig: GridHelperConfig = {\n    columns: 12,\n    gutterWidth: '16px',\n    marginWidth: '16px',\n    color: 'red',\n    opacity: 0.1,\n    key: 'g'\n};\n\n/**\n * Grid Helper\n *\n * Provides a grid based on the design guidelines and is helpful for web integration.\n *\n * - `Control + g` to toggle the grid\n *\n */\nexport default class GridHelper {\n    private sharedConfig: SharedGridConfig;\n    private breakpoints: { [key: string]: Partial<GridHelperBreakpointConfig> };\n    private currentBreakpointConfig: GridHelperBreakpointConfig;\n    private previousBreakpointConfig: GridHelperBreakpointConfig | null = null;\n    private gridContainer: HTMLElement;\n    private isActive: boolean = false;\n    private ctrlDown: boolean = false;\n\n    constructor(config: Partial<GridHelperConfig> = {}) {\n        const mergedConfig = this.mergeConfig(config, defaultConfig);\n        this.sharedConfig = mergedConfig;\n        this.breakpoints = mergedConfig.breakpoints || {};\n\n        // Determine initial breakpoint config\n        this.currentBreakpointConfig = this.getBreakpointConfig();\n        this.previousBreakpointConfig = this.currentBreakpointConfig;\n\n        // Initialize the grid container\n        this.gridContainer = document.createElement('div');\n        document.body.append(this.gridContainer);\n\n        this.initialize();\n    }\n\n    /**\n     * Deep merge user config with default config\n     */\n    private mergeConfig(\n        userConfig: Partial<GridHelperConfig>,\n        defaultConfig: GridHelperConfig\n    ): GridHelperConfig {\n        const breakpoints = { ...defaultConfig.breakpoints, ...userConfig.breakpoints };\n\n        if (userConfig.breakpoints) {\n            for (const key in userConfig.breakpoints) {\n                breakpoints[key] = { ...breakpoints[key], ...userConfig.breakpoints[key] };\n            }\n        }\n\n        delete userConfig.breakpoints;\n\n        const sharedConfig = { ...defaultConfig, ...userConfig };\n\n        return {\n            ...sharedConfig,\n            breakpoints\n        };\n    }\n\n    /**\n     * Initialize the grid helper by setting styles, columns, and events.\n     */\n    private initialize() {\n        this.setGridEvents();\n    }\n\n    /**\n     * Get the current breakpoint configuration based on the window width.\n     */\n    private getBreakpointConfig(): GridHelperBreakpointConfig {\n        const width = window.innerWidth;\n        let matchedBreakpointConfig: Partial<GridHelperBreakpointConfig> = this.sharedConfig;\n\n        // Find the closest breakpoint that is less than or equal to the current window width.\n        for (const [breakpoint, config] of Object.entries(this.breakpoints)) {\n            if (width >= parseInt(breakpoint)) {\n                matchedBreakpointConfig = { ...this.sharedConfig, ...config };\n            }\n        }\n\n        return matchedBreakpointConfig as GridHelperBreakpointConfig;\n    }\n\n    private extractCSSVariable(value: string): string | null {\n        const match = value.match(/var\\((--[\\w-]+)\\)/);\n        return match ? match[1] : null;\n    }\n\n    /**\n     * Set grid container styles.\n     */\n    private setGridHelperStyles() {\n        const elStyles = this.gridContainer.style;\n        elStyles.zIndex = '10000';\n        elStyles.position = 'fixed';\n        elStyles.top = '0';\n        elStyles.left = '0';\n        elStyles.display = 'flex';\n        elStyles.width = '100%';\n        elStyles.height = '100%';\n        elStyles.columnGap = `${this.currentBreakpointConfig.gutterWidth}`;\n        elStyles.paddingLeft = `${this.currentBreakpointConfig.marginWidth}`;\n        elStyles.paddingRight = `${this.currentBreakpointConfig.marginWidth}`;\n        elStyles.pointerEvents = 'none';\n        elStyles.visibility = this.isActive ? 'visible' : 'hidden';\n    }\n\n    /**\n     * Set grid columns.\n     */\n    private setGridHelperColumns() {\n        // Clear previous columns\n        this.gridContainer.innerHTML = '';\n\n        let columns = 0;\n\n        // Get the columns value, which can be either a number or a string\n        let configColumns = this.currentBreakpointConfig.columns;\n\n        // If configColumns is a string, check if it's a CSS variable\n        if (typeof configColumns === 'string') {\n            const cssVariable = this.extractCSSVariable(configColumns);\n\n            if (cssVariable) {\n                const computedStyle = getComputedStyle(document.documentElement);\n                const cssValue = computedStyle.getPropertyValue(cssVariable);\n\n                // Parse the CSS variable value to an integer\n                columns = parseInt(cssValue);\n\n                // Provide a fallback in case of NaN\n                if (isNaN(columns)) {\n                    columns = 12; // Default fallback\n                }\n            }\n        } else if (typeof configColumns === 'number') {\n            columns = configColumns;\n        }\n\n        for (let i = 0; i < columns; i++) {\n            const column = document.createElement('div');\n            column.style.flex = '1 1 0';\n            column.style.backgroundColor = this.currentBreakpointConfig.color;\n            column.style.opacity = `${this.currentBreakpointConfig.opacity}`;\n            this.gridContainer.appendChild(column);\n        }\n    }\n\n    /**\n     * Set grid events for resize and keydown.\n     */\n    private setGridEvents() {\n        // Handle resize to update the grid columns and styles\n        window.addEventListener('resize', () => {\n            this.currentBreakpointConfig = this.getBreakpointConfig();\n\n            this.setGridHelperStyles();\n            this.setGridHelperColumns();\n        });\n\n        // Toggle grid visibility with keyboard events\n        document.addEventListener('keydown', (e) => this.handleKeyDown(e));\n        document.addEventListener('keyup', (e) => this.handleKeyUp(e));\n    }\n\n    /**\n     * Handle keydown event to toggle the grid.\n     */\n    private handleKeyDown(e: KeyboardEvent) {\n        if (e.key === 'Control') {\n            this.ctrlDown = true;\n        } else if (this.ctrlDown && e.key === this.sharedConfig.key) {\n            this.currentBreakpointConfig = this.getBreakpointConfig();\n\n            this.setGridHelperStyles();\n            this.setGridHelperColumns();\n\n            this.toggleGridVisibility();\n        }\n    }\n\n    /**\n     * Handle keyup event to reset Control key state.\n     */\n    private handleKeyUp(e: KeyboardEvent) {\n        if (e.key === 'Control') {\n            this.ctrlDown = false;\n        }\n    }\n\n    /**\n     * Toggle the visibility of the grid.\n     */\n    private toggleGridVisibility() {\n        this.gridContainer.style.visibility = this.isActive ? 'hidden' : 'visible';\n        this.isActive = !this.isActive;\n    }\n}\n\nexport * from './types';\n"],"names":["defaultConfig","columns","gutterWidth","marginWidth","color","opacity","key","GridHelper","constructor","config","sharedConfig","breakpoints","currentBreakpointConfig","previousBreakpointConfig","gridContainer","isActive","ctrlDown","mergedConfig","this","mergeConfig","getBreakpointConfig","document","createElement","body","append","initialize","userConfig","_extends","setGridEvents","width","window","innerWidth","matchedBreakpointConfig","breakpoint","Object","entries","parseInt","extractCSSVariable","value","match","setGridHelperStyles","elStyles","style","zIndex","position","top","left","display","height","columnGap","paddingLeft","paddingRight","pointerEvents","visibility","setGridHelperColumns","innerHTML","configColumns","cssVariable","cssValue","getComputedStyle","documentElement","getPropertyValue","isNaN","i","column","flex","backgroundColor","appendChild","addEventListener","e","handleKeyDown","handleKeyUp","toggleGridVisibility"],"mappings":"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"}